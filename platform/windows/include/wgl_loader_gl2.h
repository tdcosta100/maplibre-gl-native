#pragma once

#ifndef _WGL_LOADER_GL2_H_
#define _WGL_LOADER_GL2_H_

#define GLES2_C_LIB_IMPLEMENTATION

#include "GLES2/gl2.h"
#include "wgl_loader.h"

#ifdef __cplusplus
extern "C" {
#endif

extern PFNGLACTIVETEXTUREPROC wgl_glActiveTexture;
extern PFNGLATTACHSHADERPROC wgl_glAttachShader;
extern PFNGLBINDATTRIBLOCATIONPROC wgl_glBindAttribLocation;
extern PFNGLBINDBUFFERPROC wgl_glBindBuffer;
extern PFNGLBINDFRAMEBUFFERPROC wgl_glBindFramebuffer;
extern PFNGLBINDRENDERBUFFERPROC wgl_glBindRenderbuffer;
extern PFNGLBLENDCOLORPROC wgl_glBlendColor;
extern PFNGLBLENDEQUATIONPROC wgl_glBlendEquation;
extern PFNGLBLENDEQUATIONSEPARATEPROC wgl_glBlendEquationSeparate;
extern PFNGLBLENDFUNCSEPARATEPROC wgl_glBlendFuncSeparate;
extern PFNGLBUFFERDATAPROC wgl_glBufferData;
extern PFNGLBUFFERSUBDATAPROC wgl_glBufferSubData;
extern PFNGLCHECKFRAMEBUFFERSTATUSPROC wgl_glCheckFramebufferStatus;
extern PFNGLCLEARDEPTHFPROC wgl_glClearDepthf;
extern PFNGLCOMPILESHADERPROC wgl_glCompileShader;
extern PFNGLCOMPRESSEDTEXIMAGE2DPROC wgl_glCompressedTexImage2D;
extern PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC wgl_glCompressedTexSubImage2D;
extern PFNGLCREATEPROGRAMPROC wgl_glCreateProgram;
extern PFNGLCREATESHADERPROC wgl_glCreateShader;
extern PFNGLDELETEBUFFERSPROC wgl_glDeleteBuffers;
extern PFNGLDELETEFRAMEBUFFERSPROC wgl_glDeleteFramebuffers;
extern PFNGLDELETEPROGRAMPROC wgl_glDeleteProgram;
extern PFNGLDELETERENDERBUFFERSPROC wgl_glDeleteRenderbuffers;
extern PFNGLDELETESHADERPROC wgl_glDeleteShader;
extern PFNGLDEPTHRANGEFPROC wgl_glDepthRangef;
extern PFNGLDETACHSHADERPROC wgl_glDetachShader;
extern PFNGLDISABLEVERTEXATTRIBARRAYPROC wgl_glDisableVertexAttribArray;
extern PFNGLENABLEVERTEXATTRIBARRAYPROC wgl_glEnableVertexAttribArray;
extern PFNGLFRAMEBUFFERRENDERBUFFERPROC wgl_glFramebufferRenderbuffer;
extern PFNGLFRAMEBUFFERTEXTURE2DPROC wgl_glFramebufferTexture2D;
extern PFNGLGENBUFFERSPROC wgl_glGenBuffers;
extern PFNGLGENERATEMIPMAPPROC wgl_glGenerateMipmap;
extern PFNGLGENFRAMEBUFFERSPROC wgl_glGenFramebuffers;
extern PFNGLGENRENDERBUFFERSPROC wgl_glGenRenderbuffers;
extern PFNGLGETACTIVEATTRIBPROC wgl_glGetActiveAttrib;
extern PFNGLGETACTIVEUNIFORMPROC wgl_glGetActiveUniform;
extern PFNGLGETATTACHEDSHADERSPROC wgl_glGetAttachedShaders;
extern PFNGLGETATTRIBLOCATIONPROC wgl_glGetAttribLocation;
extern PFNGLGETBUFFERPARAMETERIVPROC wgl_glGetBufferParameteriv;
extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC wgl_glGetFramebufferAttachmentParameteriv;
extern PFNGLGETPROGRAMIVPROC wgl_glGetProgramiv;
extern PFNGLGETPROGRAMINFOLOGPROC wgl_glGetProgramInfoLog;
extern PFNGLGETRENDERBUFFERPARAMETERIVPROC wgl_glGetRenderbufferParameteriv;
extern PFNGLGETSHADERIVPROC wgl_glGetShaderiv;
extern PFNGLGETSHADERINFOLOGPROC wgl_glGetShaderInfoLog;
extern PFNGLGETSHADERPRECISIONFORMATPROC wgl_glGetShaderPrecisionFormat;
extern PFNGLGETSHADERSOURCEPROC wgl_glGetShaderSource;
extern PFNGLGETUNIFORMFVPROC wgl_glGetUniformfv;
extern PFNGLGETUNIFORMIVPROC wgl_glGetUniformiv;
extern PFNGLGETUNIFORMLOCATIONPROC wgl_glGetUniformLocation;
extern PFNGLGETVERTEXATTRIBFVPROC wgl_glGetVertexAttribfv;
extern PFNGLGETVERTEXATTRIBIVPROC wgl_glGetVertexAttribiv;
extern PFNGLGETVERTEXATTRIBPOINTERVPROC wgl_glGetVertexAttribPointerv;
extern PFNGLISBUFFERPROC wgl_glIsBuffer;
extern PFNGLISFRAMEBUFFERPROC wgl_glIsFramebuffer;
extern PFNGLISPROGRAMPROC wgl_glIsProgram;
extern PFNGLISRENDERBUFFERPROC wgl_glIsRenderbuffer;
extern PFNGLISSHADERPROC wgl_glIsShader;
extern PFNGLLINKPROGRAMPROC wgl_glLinkProgram;
extern PFNGLRELEASESHADERCOMPILERPROC wgl_glReleaseShaderCompiler;
extern PFNGLRENDERBUFFERSTORAGEPROC wgl_glRenderbufferStorage;
extern PFNGLSAMPLECOVERAGEPROC wgl_glSampleCoverage;
extern PFNGLSHADERBINARYPROC wgl_glShaderBinary;
extern PFNGLSHADERSOURCEPROC wgl_glShaderSource;
extern PFNGLSTENCILFUNCSEPARATEPROC wgl_glStencilFuncSeparate;
extern PFNGLSTENCILMASKSEPARATEPROC wgl_glStencilMaskSeparate;
extern PFNGLSTENCILOPSEPARATEPROC wgl_glStencilOpSeparate;
extern PFNGLUNIFORM1FPROC wgl_glUniform1f;
extern PFNGLUNIFORM1FVPROC wgl_glUniform1fv;
extern PFNGLUNIFORM1IPROC wgl_glUniform1i;
extern PFNGLUNIFORM1IVPROC wgl_glUniform1iv;
extern PFNGLUNIFORM2FPROC wgl_glUniform2f;
extern PFNGLUNIFORM2FVPROC wgl_glUniform2fv;
extern PFNGLUNIFORM2IPROC wgl_glUniform2i;
extern PFNGLUNIFORM2IVPROC wgl_glUniform2iv;
extern PFNGLUNIFORM3FPROC wgl_glUniform3f;
extern PFNGLUNIFORM3FVPROC wgl_glUniform3fv;
extern PFNGLUNIFORM3IPROC wgl_glUniform3i;
extern PFNGLUNIFORM3IVPROC wgl_glUniform3iv;
extern PFNGLUNIFORM4FPROC wgl_glUniform4f;
extern PFNGLUNIFORM4FVPROC wgl_glUniform4fv;
extern PFNGLUNIFORM4IPROC wgl_glUniform4i;
extern PFNGLUNIFORM4IVPROC wgl_glUniform4iv;
extern PFNGLUNIFORMMATRIX2FVPROC wgl_glUniformMatrix2fv;
extern PFNGLUNIFORMMATRIX3FVPROC wgl_glUniformMatrix3fv;
extern PFNGLUNIFORMMATRIX4FVPROC wgl_glUniformMatrix4fv;
extern PFNGLUSEPROGRAMPROC wgl_glUseProgram;
extern PFNGLVALIDATEPROGRAMPROC wgl_glValidateProgram;
extern PFNGLVERTEXATTRIB1FPROC wgl_glVertexAttrib1f;
extern PFNGLVERTEXATTRIB1FVPROC wgl_glVertexAttrib1fv;
extern PFNGLVERTEXATTRIB2FPROC wgl_glVertexAttrib2f;
extern PFNGLVERTEXATTRIB2FVPROC wgl_glVertexAttrib2fv;
extern PFNGLVERTEXATTRIB3FPROC wgl_glVertexAttrib3f;
extern PFNGLVERTEXATTRIB3FVPROC wgl_glVertexAttrib3fv;
extern PFNGLVERTEXATTRIB4FPROC wgl_glVertexAttrib4f;
extern PFNGLVERTEXATTRIB4FVPROC wgl_glVertexAttrib4fv;
extern PFNGLVERTEXATTRIBPOINTERPROC wgl_glVertexAttribPointer;
#if !(defined(WIN32) && defined(__GL_H__))
extern PFNGLBINDTEXTUREPROC wgl_glBindTexture;
extern PFNGLBLENDFUNCPROC wgl_glBlendFunc;
extern PFNGLCLEARPROC wgl_glClear;
extern PFNGLCLEARCOLORPROC wgl_glClearColor;
extern PFNGLCLEARSTENCILPROC wgl_glClearStencil;
extern PFNGLCOLORMASKPROC wgl_glColorMask;
extern PFNGLCOPYTEXIMAGE2DPROC wgl_glCopyTexImage2D;
extern PFNGLCOPYTEXSUBIMAGE2DPROC wgl_glCopyTexSubImage2D;
extern PFNGLCULLFACEPROC wgl_glCullFace;
extern PFNGLDELETETEXTURESPROC wgl_glDeleteTextures;
extern PFNGLDEPTHFUNCPROC wgl_glDepthFunc;
extern PFNGLDEPTHMASKPROC wgl_glDepthMask;
extern PFNGLDISABLEPROC wgl_glDisable;
extern PFNGLDRAWARRAYSPROC wgl_glDrawArrays;
extern PFNGLDRAWELEMENTSPROC wgl_glDrawElements;
extern PFNGLENABLEPROC wgl_glEnable;
extern PFNGLFINISHPROC wgl_glFinish;
extern PFNGLFLUSHPROC wgl_glFlush;
extern PFNGLFRONTFACEPROC wgl_glFrontFace;
extern PFNGLGENTEXTURESPROC wgl_glGenTextures;
extern PFNGLGETBOOLEANVPROC wgl_glGetBooleanv;
extern PFNGLGETERRORPROC wgl_glGetError;
extern PFNGLGETFLOATVPROC wgl_glGetFloatv;
extern PFNGLGETINTEGERVPROC wgl_glGetIntegerv;
extern PFNGLGETSTRINGPROC wgl_glGetString;
extern PFNGLGETTEXPARAMETERFVPROC wgl_glGetTexParameterfv;
extern PFNGLGETTEXPARAMETERIVPROC wgl_glGetTexParameteriv;
extern PFNGLHINTPROC wgl_glHint;
extern PFNGLISENABLEDPROC wgl_glIsEnabled;
extern PFNGLISTEXTUREPROC wgl_glIsTexture;
extern PFNGLLINEWIDTHPROC wgl_glLineWidth;
extern PFNGLPIXELSTOREIPROC wgl_glPixelStorei;
extern PFNGLPOLYGONOFFSETPROC wgl_glPolygonOffset;
extern PFNGLREADPIXELSPROC wgl_glReadPixels;
extern PFNGLSCISSORPROC wgl_glScissor;
extern PFNGLSTENCILFUNCPROC wgl_glStencilFunc;
extern PFNGLSTENCILMASKPROC wgl_glStencilMask;
extern PFNGLSTENCILOPPROC wgl_glStencilOp;
extern PFNGLTEXIMAGE2DPROC wgl_glTexImage2D;
extern PFNGLTEXPARAMETERFPROC wgl_glTexParameterf;
extern PFNGLTEXPARAMETERFVPROC wgl_glTexParameterfv;
extern PFNGLTEXPARAMETERIPROC wgl_glTexParameteri;
extern PFNGLTEXPARAMETERIVPROC wgl_glTexParameteriv;
extern PFNGLTEXSUBIMAGE2DPROC wgl_glTexSubImage2D;
extern PFNGLVIEWPORTPROC wgl_glViewport;
#endif

GL_APICALL void GL_APIENTRY glActiveTexture (GLenum texture);
GL_APICALL void GL_APIENTRY glAttachShader (GLuint program, GLuint shader);
GL_APICALL void GL_APIENTRY glBindAttribLocation (GLuint program, GLuint index, const GLchar *name);
GL_APICALL void GL_APIENTRY glBindBuffer (GLenum target, GLuint buffer);
GL_APICALL void GL_APIENTRY glBindFramebuffer (GLenum target, GLuint framebuffer);
GL_APICALL void GL_APIENTRY glBindRenderbuffer (GLenum target, GLuint renderbuffer);
GL_APICALL void GL_APIENTRY glBlendColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GL_APICALL void GL_APIENTRY glBlendEquation (GLenum mode);
GL_APICALL void GL_APIENTRY glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);
GL_APICALL void GL_APIENTRY glBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GL_APICALL void GL_APIENTRY glBufferData (GLenum target, GLsizeiptr size, const void *data, GLenum usage);
GL_APICALL void GL_APIENTRY glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
GL_APICALL GLenum GL_APIENTRY glCheckFramebufferStatus (GLenum target);
GL_APICALL void GL_APIENTRY glClearDepthf (GLfloat d);
GL_APICALL void GL_APIENTRY glCompileShader (GLuint shader);
GL_APICALL void GL_APIENTRY glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
GL_APICALL void GL_APIENTRY glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
GL_APICALL GLuint GL_APIENTRY glCreateProgram (void);
GL_APICALL GLuint GL_APIENTRY glCreateShader (GLenum type);
GL_APICALL void GL_APIENTRY glDeleteBuffers (GLsizei n, const GLuint *buffers);
GL_APICALL void GL_APIENTRY glDeleteFramebuffers (GLsizei n, const GLuint *framebuffers);
GL_APICALL void GL_APIENTRY glDeleteProgram (GLuint program);
GL_APICALL void GL_APIENTRY glDeleteRenderbuffers (GLsizei n, const GLuint *renderbuffers);
GL_APICALL void GL_APIENTRY glDeleteShader (GLuint shader);
GL_APICALL void GL_APIENTRY glDepthRangef (GLfloat n, GLfloat f);
GL_APICALL void GL_APIENTRY glDetachShader (GLuint program, GLuint shader);
GL_APICALL void GL_APIENTRY glDisableVertexAttribArray (GLuint index);
GL_APICALL void GL_APIENTRY glEnableVertexAttribArray (GLuint index);
GL_APICALL void GL_APIENTRY glFramebufferRenderbuffer (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GL_APICALL void GL_APIENTRY glFramebufferTexture2D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GL_APICALL void GL_APIENTRY glGenBuffers (GLsizei n, GLuint *buffers);
GL_APICALL void GL_APIENTRY glGenerateMipmap (GLenum target);
GL_APICALL void GL_APIENTRY glGenFramebuffers (GLsizei n, GLuint *framebuffers);
GL_APICALL void GL_APIENTRY glGenRenderbuffers (GLsizei n, GLuint *renderbuffers);
GL_APICALL void GL_APIENTRY glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
GL_APICALL void GL_APIENTRY glGetActiveUniform (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
GL_APICALL void GL_APIENTRY glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
GL_APICALL GLint GL_APIENTRY glGetAttribLocation (GLuint program, const GLchar *name);
GL_APICALL void GL_APIENTRY glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params);
GL_APICALL void GL_APIENTRY glGetFramebufferAttachmentParameteriv (GLenum target, GLenum attachment, GLenum pname, GLint *params);
GL_APICALL void GL_APIENTRY glGetProgramiv (GLuint program, GLenum pname, GLint *params);
GL_APICALL void GL_APIENTRY glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
GL_APICALL void GL_APIENTRY glGetRenderbufferParameteriv (GLenum target, GLenum pname, GLint *params);
GL_APICALL void GL_APIENTRY glGetShaderiv (GLuint shader, GLenum pname, GLint *params);
GL_APICALL void GL_APIENTRY glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
GL_APICALL void GL_APIENTRY glGetShaderPrecisionFormat (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
GL_APICALL void GL_APIENTRY glGetShaderSource (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
GL_APICALL void GL_APIENTRY glGetUniformfv (GLuint program, GLint location, GLfloat *params);
GL_APICALL void GL_APIENTRY glGetUniformiv (GLuint program, GLint location, GLint *params);
GL_APICALL GLint GL_APIENTRY glGetUniformLocation (GLuint program, const GLchar *name);
GL_APICALL void GL_APIENTRY glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat *params);
GL_APICALL void GL_APIENTRY glGetVertexAttribiv (GLuint index, GLenum pname, GLint *params);
GL_APICALL void GL_APIENTRY glGetVertexAttribPointerv (GLuint index, GLenum pname, void **pointer);
GL_APICALL GLboolean GL_APIENTRY glIsBuffer (GLuint buffer);
GL_APICALL GLboolean GL_APIENTRY glIsFramebuffer (GLuint framebuffer);
GL_APICALL GLboolean GL_APIENTRY glIsProgram (GLuint program);
GL_APICALL GLboolean GL_APIENTRY glIsRenderbuffer (GLuint renderbuffer);
GL_APICALL GLboolean GL_APIENTRY glIsShader (GLuint shader);
GL_APICALL void GL_APIENTRY glLinkProgram (GLuint program);
GL_APICALL void GL_APIENTRY glReleaseShaderCompiler (void);
GL_APICALL void GL_APIENTRY glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
GL_APICALL void GL_APIENTRY glSampleCoverage (GLfloat value, GLboolean invert);
GL_APICALL void GL_APIENTRY glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryFormat, const void *binary, GLsizei length);
GL_APICALL void GL_APIENTRY glShaderSource (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
GL_APICALL void GL_APIENTRY glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask);
GL_APICALL void GL_APIENTRY glStencilMaskSeparate (GLenum face, GLuint mask);
GL_APICALL void GL_APIENTRY glStencilOpSeparate (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
GL_APICALL void GL_APIENTRY glUniform1f (GLint location, GLfloat v0);
GL_APICALL void GL_APIENTRY glUniform1fv (GLint location, GLsizei count, const GLfloat *value);
GL_APICALL void GL_APIENTRY glUniform1i (GLint location, GLint v0);
GL_APICALL void GL_APIENTRY glUniform1iv (GLint location, GLsizei count, const GLint *value);
GL_APICALL void GL_APIENTRY glUniform2f (GLint location, GLfloat v0, GLfloat v1);
GL_APICALL void GL_APIENTRY glUniform2fv (GLint location, GLsizei count, const GLfloat *value);
GL_APICALL void GL_APIENTRY glUniform2i (GLint location, GLint v0, GLint v1);
GL_APICALL void GL_APIENTRY glUniform2iv (GLint location, GLsizei count, const GLint *value);
GL_APICALL void GL_APIENTRY glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GL_APICALL void GL_APIENTRY glUniform3fv (GLint location, GLsizei count, const GLfloat *value);
GL_APICALL void GL_APIENTRY glUniform3i (GLint location, GLint v0, GLint v1, GLint v2);
GL_APICALL void GL_APIENTRY glUniform3iv (GLint location, GLsizei count, const GLint *value);
GL_APICALL void GL_APIENTRY glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GL_APICALL void GL_APIENTRY glUniform4fv (GLint location, GLsizei count, const GLfloat *value);
GL_APICALL void GL_APIENTRY glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GL_APICALL void GL_APIENTRY glUniform4iv (GLint location, GLsizei count, const GLint *value);
GL_APICALL void GL_APIENTRY glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GL_APICALL void GL_APIENTRY glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GL_APICALL void GL_APIENTRY glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GL_APICALL void GL_APIENTRY glUseProgram (GLuint program);
GL_APICALL void GL_APIENTRY glValidateProgram (GLuint program);
GL_APICALL void GL_APIENTRY glVertexAttrib1f (GLuint index, GLfloat x);
GL_APICALL void GL_APIENTRY glVertexAttrib1fv (GLuint index, const GLfloat *v);
GL_APICALL void GL_APIENTRY glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y);
GL_APICALL void GL_APIENTRY glVertexAttrib2fv (GLuint index, const GLfloat *v);
GL_APICALL void GL_APIENTRY glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z);
GL_APICALL void GL_APIENTRY glVertexAttrib3fv (GLuint index, const GLfloat *v);
GL_APICALL void GL_APIENTRY glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GL_APICALL void GL_APIENTRY glVertexAttrib4fv (GLuint index, const GLfloat *v);
GL_APICALL void GL_APIENTRY glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
#ifdef OPENGL32_PROTOTYPES
GL_APICALL void GL_APIENTRY glBindTexture (GLenum target, GLuint texture);
GL_APICALL void GL_APIENTRY glBlendFunc (GLenum sfactor, GLenum dfactor);
GL_APICALL void GL_APIENTRY glClear (GLbitfield mask);
GL_APICALL void GL_APIENTRY glClearColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GL_APICALL void GL_APIENTRY glClearStencil (GLint s);
GL_APICALL void GL_APIENTRY glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GL_APICALL void GL_APIENTRY glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GL_APICALL void GL_APIENTRY glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GL_APICALL void GL_APIENTRY glCullFace (GLenum mode);
GL_APICALL void GL_APIENTRY glDeleteTextures (GLsizei n, const GLuint *textures);
GL_APICALL void GL_APIENTRY glDepthFunc (GLenum func);
GL_APICALL void GL_APIENTRY glDepthMask (GLboolean flag);
GL_APICALL void GL_APIENTRY glDisable (GLenum cap);
GL_APICALL void GL_APIENTRY glDrawArrays (GLenum mode, GLint first, GLsizei count);
GL_APICALL void GL_APIENTRY glDrawElements (GLenum mode, GLsizei count, GLenum type, const void *indices);
GL_APICALL void GL_APIENTRY glEnable (GLenum cap);
GL_APICALL void GL_APIENTRY glFinish (void);
GL_APICALL void GL_APIENTRY glFlush (void);
GL_APICALL void GL_APIENTRY glFrontFace (GLenum mode);
GL_APICALL void GL_APIENTRY glGenTextures (GLsizei n, GLuint *textures);
GL_APICALL void GL_APIENTRY glGetBooleanv (GLenum pname, GLboolean *data);
GL_APICALL GLenum GL_APIENTRY glGetError (void);
GL_APICALL void GL_APIENTRY glGetFloatv (GLenum pname, GLfloat *data);
GL_APICALL void GL_APIENTRY glGetIntegerv (GLenum pname, GLint *data);
GL_APICALL const GLubyte * GL_APIENTRY glGetString (GLenum name);
GL_APICALL void GL_APIENTRY glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params);
GL_APICALL void GL_APIENTRY glGetTexParameteriv (GLenum target, GLenum pname, GLint *params);
GL_APICALL void GL_APIENTRY glHint (GLenum target, GLenum mode);
GL_APICALL GLboolean GL_APIENTRY glIsEnabled (GLenum cap);
GL_APICALL GLboolean GL_APIENTRY glIsTexture (GLuint texture);
GL_APICALL void GL_APIENTRY glLineWidth (GLfloat width);
GL_APICALL void GL_APIENTRY glPixelStorei (GLenum pname, GLint param);
GL_APICALL void GL_APIENTRY glPolygonOffset (GLfloat factor, GLfloat units);
GL_APICALL void GL_APIENTRY glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
GL_APICALL void GL_APIENTRY glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
GL_APICALL void GL_APIENTRY glStencilFunc (GLenum func, GLint ref, GLuint mask);
GL_APICALL void GL_APIENTRY glStencilMask (GLuint mask);
GL_APICALL void GL_APIENTRY glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);
GL_APICALL void GL_APIENTRY glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
GL_APICALL void GL_APIENTRY glTexParameterf (GLenum target, GLenum pname, GLfloat param);
GL_APICALL void GL_APIENTRY glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params);
GL_APICALL void GL_APIENTRY glTexParameteri (GLenum target, GLenum pname, GLint param);
GL_APICALL void GL_APIENTRY glTexParameteriv (GLenum target, GLenum pname, const GLint *params);
GL_APICALL void GL_APIENTRY glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
GL_APICALL void GL_APIENTRY glViewport (GLint x, GLint y, GLsizei width, GLsizei height);
#endif

void load_WGL_GL2();

#ifdef __cplusplus
}
#endif
#endif
#pragma once

#ifndef _WGL_LOADER_WGLEXT_H_
#define _WGL_LOADER_WGLEXT_H_

#include "GL/glcorearb.h"
#include "GL/wglext.h"
#include "wgl_loader.h"

#ifdef __cplusplus
extern "C" {
#endif

extern PFNWGLCREATEBUFFERREGIONARBPROC wgl_wglCreateBufferRegionARB;
extern PFNWGLDELETEBUFFERREGIONARBPROC wgl_wglDeleteBufferRegionARB;
extern PFNWGLSAVEBUFFERREGIONARBPROC wgl_wglSaveBufferRegionARB;
extern PFNWGLRESTOREBUFFERREGIONARBPROC wgl_wglRestoreBufferRegionARB;
extern PFNWGLCREATECONTEXTATTRIBSARBPROC wgl_wglCreateContextAttribsARB;
extern PFNWGLGETEXTENSIONSSTRINGARBPROC wgl_wglGetExtensionsStringARB;
extern PFNWGLMAKECONTEXTCURRENTARBPROC wgl_wglMakeContextCurrentARB;
extern PFNWGLGETCURRENTREADDCARBPROC wgl_wglGetCurrentReadDCARB;
extern PFNWGLCREATEPBUFFERARBPROC wgl_wglCreatePbufferARB;
extern PFNWGLGETPBUFFERDCARBPROC wgl_wglGetPbufferDCARB;
extern PFNWGLRELEASEPBUFFERDCARBPROC wgl_wglReleasePbufferDCARB;
extern PFNWGLDESTROYPBUFFERARBPROC wgl_wglDestroyPbufferARB;
extern PFNWGLQUERYPBUFFERARBPROC wgl_wglQueryPbufferARB;
extern PFNWGLGETPIXELFORMATATTRIBIVARBPROC wgl_wglGetPixelFormatAttribivARB;
extern PFNWGLGETPIXELFORMATATTRIBFVARBPROC wgl_wglGetPixelFormatAttribfvARB;
extern PFNWGLCHOOSEPIXELFORMATARBPROC wgl_wglChoosePixelFormatARB;
extern PFNWGLBINDTEXIMAGEARBPROC wgl_wglBindTexImageARB;
extern PFNWGLRELEASETEXIMAGEARBPROC wgl_wglReleaseTexImageARB;
extern PFNWGLSETPBUFFERATTRIBARBPROC wgl_wglSetPbufferAttribARB;
extern PFNWGLSETSTEREOEMITTERSTATE3DLPROC wgl_wglSetStereoEmitterState3DL;
extern PFNWGLGETGPUIDSAMDPROC wgl_wglGetGPUIDsAMD;
extern PFNWGLGETGPUINFOAMDPROC wgl_wglGetGPUInfoAMD;
extern PFNWGLGETCONTEXTGPUIDAMDPROC wgl_wglGetContextGPUIDAMD;
extern PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC wgl_wglCreateAssociatedContextAMD;
extern PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC wgl_wglCreateAssociatedContextAttribsAMD;
extern PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC wgl_wglDeleteAssociatedContextAMD;
extern PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC wgl_wglMakeAssociatedContextCurrentAMD;
extern PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC wgl_wglGetCurrentAssociatedContextAMD;
extern PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC wgl_wglBlitContextFramebufferAMD;
extern PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC wgl_wglCreateDisplayColorTableEXT;
extern PFNWGLLOADDISPLAYCOLORTABLEEXTPROC wgl_wglLoadDisplayColorTableEXT;
extern PFNWGLBINDDISPLAYCOLORTABLEEXTPROC wgl_wglBindDisplayColorTableEXT;
extern PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC wgl_wglDestroyDisplayColorTableEXT;
extern PFNWGLGETEXTENSIONSSTRINGEXTPROC wgl_wglGetExtensionsStringEXT;
extern PFNWGLMAKECONTEXTCURRENTEXTPROC wgl_wglMakeContextCurrentEXT;
extern PFNWGLGETCURRENTREADDCEXTPROC wgl_wglGetCurrentReadDCEXT;
extern PFNWGLCREATEPBUFFEREXTPROC wgl_wglCreatePbufferEXT;
extern PFNWGLGETPBUFFERDCEXTPROC wgl_wglGetPbufferDCEXT;
extern PFNWGLRELEASEPBUFFERDCEXTPROC wgl_wglReleasePbufferDCEXT;
extern PFNWGLDESTROYPBUFFEREXTPROC wgl_wglDestroyPbufferEXT;
extern PFNWGLQUERYPBUFFEREXTPROC wgl_wglQueryPbufferEXT;
extern PFNWGLGETPIXELFORMATATTRIBIVEXTPROC wgl_wglGetPixelFormatAttribivEXT;
extern PFNWGLGETPIXELFORMATATTRIBFVEXTPROC wgl_wglGetPixelFormatAttribfvEXT;
extern PFNWGLCHOOSEPIXELFORMATEXTPROC wgl_wglChoosePixelFormatEXT;
extern PFNWGLSWAPINTERVALEXTPROC wgl_wglSwapIntervalEXT;
extern PFNWGLGETSWAPINTERVALEXTPROC wgl_wglGetSwapIntervalEXT;
extern PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC wgl_wglGetDigitalVideoParametersI3D;
extern PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC wgl_wglSetDigitalVideoParametersI3D;
extern PFNWGLGETGAMMATABLEPARAMETERSI3DPROC wgl_wglGetGammaTableParametersI3D;
extern PFNWGLSETGAMMATABLEPARAMETERSI3DPROC wgl_wglSetGammaTableParametersI3D;
extern PFNWGLGETGAMMATABLEI3DPROC wgl_wglGetGammaTableI3D;
extern PFNWGLSETGAMMATABLEI3DPROC wgl_wglSetGammaTableI3D;
extern PFNWGLENABLEGENLOCKI3DPROC wgl_wglEnableGenlockI3D;
extern PFNWGLDISABLEGENLOCKI3DPROC wgl_wglDisableGenlockI3D;
extern PFNWGLISENABLEDGENLOCKI3DPROC wgl_wglIsEnabledGenlockI3D;
extern PFNWGLGENLOCKSOURCEI3DPROC wgl_wglGenlockSourceI3D;
extern PFNWGLGETGENLOCKSOURCEI3DPROC wgl_wglGetGenlockSourceI3D;
extern PFNWGLGENLOCKSOURCEEDGEI3DPROC wgl_wglGenlockSourceEdgeI3D;
extern PFNWGLGETGENLOCKSOURCEEDGEI3DPROC wgl_wglGetGenlockSourceEdgeI3D;
extern PFNWGLGENLOCKSAMPLERATEI3DPROC wgl_wglGenlockSampleRateI3D;
extern PFNWGLGETGENLOCKSAMPLERATEI3DPROC wgl_wglGetGenlockSampleRateI3D;
extern PFNWGLGENLOCKSOURCEDELAYI3DPROC wgl_wglGenlockSourceDelayI3D;
extern PFNWGLGETGENLOCKSOURCEDELAYI3DPROC wgl_wglGetGenlockSourceDelayI3D;
extern PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC wgl_wglQueryGenlockMaxSourceDelayI3D;
extern PFNWGLCREATEIMAGEBUFFERI3DPROC wgl_wglCreateImageBufferI3D;
extern PFNWGLDESTROYIMAGEBUFFERI3DPROC wgl_wglDestroyImageBufferI3D;
extern PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC wgl_wglAssociateImageBufferEventsI3D;
extern PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC wgl_wglReleaseImageBufferEventsI3D;
extern PFNWGLENABLEFRAMELOCKI3DPROC wgl_wglEnableFrameLockI3D;
extern PFNWGLDISABLEFRAMELOCKI3DPROC wgl_wglDisableFrameLockI3D;
extern PFNWGLISENABLEDFRAMELOCKI3DPROC wgl_wglIsEnabledFrameLockI3D;
extern PFNWGLQUERYFRAMELOCKMASTERI3DPROC wgl_wglQueryFrameLockMasterI3D;
extern PFNWGLGETFRAMEUSAGEI3DPROC wgl_wglGetFrameUsageI3D;
extern PFNWGLBEGINFRAMETRACKINGI3DPROC wgl_wglBeginFrameTrackingI3D;
extern PFNWGLENDFRAMETRACKINGI3DPROC wgl_wglEndFrameTrackingI3D;
extern PFNWGLQUERYFRAMETRACKINGI3DPROC wgl_wglQueryFrameTrackingI3D;
extern PFNWGLDXSETRESOURCESHAREHANDLENVPROC wgl_wglDXSetResourceShareHandleNV;
extern PFNWGLDXOPENDEVICENVPROC wgl_wglDXOpenDeviceNV;
extern PFNWGLDXCLOSEDEVICENVPROC wgl_wglDXCloseDeviceNV;
extern PFNWGLDXREGISTEROBJECTNVPROC wgl_wglDXRegisterObjectNV;
extern PFNWGLDXUNREGISTEROBJECTNVPROC wgl_wglDXUnregisterObjectNV;
extern PFNWGLDXOBJECTACCESSNVPROC wgl_wglDXObjectAccessNV;
extern PFNWGLDXLOCKOBJECTSNVPROC wgl_wglDXLockObjectsNV;
extern PFNWGLDXUNLOCKOBJECTSNVPROC wgl_wglDXUnlockObjectsNV;
extern PFNWGLCOPYIMAGESUBDATANVPROC wgl_wglCopyImageSubDataNV;
extern PFNWGLDELAYBEFORESWAPNVPROC wgl_wglDelayBeforeSwapNV;
extern PFNWGLENUMGPUSNVPROC wgl_wglEnumGpusNV;
extern PFNWGLENUMGPUDEVICESNVPROC wgl_wglEnumGpuDevicesNV;
extern PFNWGLCREATEAFFINITYDCNVPROC wgl_wglCreateAffinityDCNV;
extern PFNWGLENUMGPUSFROMAFFINITYDCNVPROC wgl_wglEnumGpusFromAffinityDCNV;
extern PFNWGLDELETEDCNVPROC wgl_wglDeleteDCNV;
extern PFNWGLENUMERATEVIDEODEVICESNVPROC wgl_wglEnumerateVideoDevicesNV;
extern PFNWGLBINDVIDEODEVICENVPROC wgl_wglBindVideoDeviceNV;
extern PFNWGLQUERYCURRENTCONTEXTNVPROC wgl_wglQueryCurrentContextNV;
extern PFNWGLJOINSWAPGROUPNVPROC wgl_wglJoinSwapGroupNV;
extern PFNWGLBINDSWAPBARRIERNVPROC wgl_wglBindSwapBarrierNV;
extern PFNWGLQUERYSWAPGROUPNVPROC wgl_wglQuerySwapGroupNV;
extern PFNWGLQUERYMAXSWAPGROUPSNVPROC wgl_wglQueryMaxSwapGroupsNV;
extern PFNWGLQUERYFRAMECOUNTNVPROC wgl_wglQueryFrameCountNV;
extern PFNWGLRESETFRAMECOUNTNVPROC wgl_wglResetFrameCountNV;
extern PFNWGLALLOCATEMEMORYNVPROC wgl_wglAllocateMemoryNV;
extern PFNWGLFREEMEMORYNVPROC wgl_wglFreeMemoryNV;
extern PFNWGLBINDVIDEOCAPTUREDEVICENVPROC wgl_wglBindVideoCaptureDeviceNV;
extern PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC wgl_wglEnumerateVideoCaptureDevicesNV;
extern PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC wgl_wglLockVideoCaptureDeviceNV;
extern PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC wgl_wglQueryVideoCaptureDeviceNV;
extern PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC wgl_wglReleaseVideoCaptureDeviceNV;
extern PFNWGLGETVIDEODEVICENVPROC wgl_wglGetVideoDeviceNV;
extern PFNWGLRELEASEVIDEODEVICENVPROC wgl_wglReleaseVideoDeviceNV;
extern PFNWGLBINDVIDEOIMAGENVPROC wgl_wglBindVideoImageNV;
extern PFNWGLRELEASEVIDEOIMAGENVPROC wgl_wglReleaseVideoImageNV;
extern PFNWGLSENDPBUFFERTOVIDEONVPROC wgl_wglSendPbufferToVideoNV;
extern PFNWGLGETVIDEOINFONVPROC wgl_wglGetVideoInfoNV;
extern PFNWGLGETSYNCVALUESOMLPROC wgl_wglGetSyncValuesOML;
extern PFNWGLGETMSCRATEOMLPROC wgl_wglGetMscRateOML;
extern PFNWGLSWAPBUFFERSMSCOMLPROC wgl_wglSwapBuffersMscOML;
extern PFNWGLSWAPLAYERBUFFERSMSCOMLPROC wgl_wglSwapLayerBuffersMscOML;
extern PFNWGLWAITFORMSCOMLPROC wgl_wglWaitForMscOML;
extern PFNWGLWAITFORSBCOMLPROC wgl_wglWaitForSbcOML;

HANDLE WINAPI wglCreateBufferRegionARB (HDC hDC, int iLayerPlane, UINT uType);
VOID WINAPI wglDeleteBufferRegionARB (HANDLE hRegion);
BOOL WINAPI wglSaveBufferRegionARB (HANDLE hRegion, int x, int y, int width, int height);
BOOL WINAPI wglRestoreBufferRegionARB (HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);
HGLRC WINAPI wglCreateContextAttribsARB (HDC hDC, HGLRC hShareContext, const int *attribList);
const char * WINAPI wglGetExtensionsStringARB (HDC hdc);
BOOL WINAPI wglMakeContextCurrentARB (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);
HDC WINAPI wglGetCurrentReadDCARB (void);
HPBUFFERARB WINAPI wglCreatePbufferARB (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);
HDC WINAPI wglGetPbufferDCARB (HPBUFFERARB hPbuffer);
int WINAPI wglReleasePbufferDCARB (HPBUFFERARB hPbuffer, HDC hDC);
BOOL WINAPI wglDestroyPbufferARB (HPBUFFERARB hPbuffer);
BOOL WINAPI wglQueryPbufferARB (HPBUFFERARB hPbuffer, int iAttribute, int *piValue);
BOOL WINAPI wglGetPixelFormatAttribivARB (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);
BOOL WINAPI wglGetPixelFormatAttribfvARB (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);
BOOL WINAPI wglChoosePixelFormatARB (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);
BOOL WINAPI wglBindTexImageARB (HPBUFFERARB hPbuffer, int iBuffer);
BOOL WINAPI wglReleaseTexImageARB (HPBUFFERARB hPbuffer, int iBuffer);
BOOL WINAPI wglSetPbufferAttribARB (HPBUFFERARB hPbuffer, const int *piAttribList);
BOOL WINAPI wglSetStereoEmitterState3DL (HDC hDC, UINT uState);
UINT WINAPI wglGetGPUIDsAMD (UINT maxCount, UINT *ids);
INT WINAPI wglGetGPUInfoAMD (UINT id, INT property, GLenum dataType, UINT size, void *data);
UINT WINAPI wglGetContextGPUIDAMD (HGLRC hglrc);
HGLRC WINAPI wglCreateAssociatedContextAMD (UINT id);
HGLRC WINAPI wglCreateAssociatedContextAttribsAMD (UINT id, HGLRC hShareContext, const int *attribList);
BOOL WINAPI wglDeleteAssociatedContextAMD (HGLRC hglrc);
BOOL WINAPI wglMakeAssociatedContextCurrentAMD (HGLRC hglrc);
HGLRC WINAPI wglGetCurrentAssociatedContextAMD (void);
VOID WINAPI wglBlitContextFramebufferAMD (HGLRC dstCtx, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLboolean WINAPI wglCreateDisplayColorTableEXT (GLushort id);
GLboolean WINAPI wglLoadDisplayColorTableEXT (const GLushort *table, GLuint length);
GLboolean WINAPI wglBindDisplayColorTableEXT (GLushort id);
VOID WINAPI wglDestroyDisplayColorTableEXT (GLushort id);
const char * WINAPI wglGetExtensionsStringEXT (void);
BOOL WINAPI wglMakeContextCurrentEXT (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);
HDC WINAPI wglGetCurrentReadDCEXT (void);
HPBUFFEREXT WINAPI wglCreatePbufferEXT (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);
HDC WINAPI wglGetPbufferDCEXT (HPBUFFEREXT hPbuffer);
int WINAPI wglReleasePbufferDCEXT (HPBUFFEREXT hPbuffer, HDC hDC);
BOOL WINAPI wglDestroyPbufferEXT (HPBUFFEREXT hPbuffer);
BOOL WINAPI wglQueryPbufferEXT (HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);
BOOL WINAPI wglGetPixelFormatAttribivEXT (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues);
BOOL WINAPI wglGetPixelFormatAttribfvEXT (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues);
BOOL WINAPI wglChoosePixelFormatEXT (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);
BOOL WINAPI wglSwapIntervalEXT (int interval);
int WINAPI wglGetSwapIntervalEXT (void);
BOOL WINAPI wglGetDigitalVideoParametersI3D (HDC hDC, int iAttribute, int *piValue);
BOOL WINAPI wglSetDigitalVideoParametersI3D (HDC hDC, int iAttribute, const int *piValue);
BOOL WINAPI wglGetGammaTableParametersI3D (HDC hDC, int iAttribute, int *piValue);
BOOL WINAPI wglSetGammaTableParametersI3D (HDC hDC, int iAttribute, const int *piValue);
BOOL WINAPI wglGetGammaTableI3D (HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue);
BOOL WINAPI wglSetGammaTableI3D (HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue);
BOOL WINAPI wglEnableGenlockI3D (HDC hDC);
BOOL WINAPI wglDisableGenlockI3D (HDC hDC);
BOOL WINAPI wglIsEnabledGenlockI3D (HDC hDC, BOOL *pFlag);
BOOL WINAPI wglGenlockSourceI3D (HDC hDC, UINT uSource);
BOOL WINAPI wglGetGenlockSourceI3D (HDC hDC, UINT *uSource);
BOOL WINAPI wglGenlockSourceEdgeI3D (HDC hDC, UINT uEdge);
BOOL WINAPI wglGetGenlockSourceEdgeI3D (HDC hDC, UINT *uEdge);
BOOL WINAPI wglGenlockSampleRateI3D (HDC hDC, UINT uRate);
BOOL WINAPI wglGetGenlockSampleRateI3D (HDC hDC, UINT *uRate);
BOOL WINAPI wglGenlockSourceDelayI3D (HDC hDC, UINT uDelay);
BOOL WINAPI wglGetGenlockSourceDelayI3D (HDC hDC, UINT *uDelay);
BOOL WINAPI wglQueryGenlockMaxSourceDelayI3D (HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay);
LPVOID WINAPI wglCreateImageBufferI3D (HDC hDC, DWORD dwSize, UINT uFlags);
BOOL WINAPI wglDestroyImageBufferI3D (HDC hDC, LPVOID pAddress);
BOOL WINAPI wglAssociateImageBufferEventsI3D (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
BOOL WINAPI wglReleaseImageBufferEventsI3D (HDC hDC, const LPVOID *pAddress, UINT count);
BOOL WINAPI wglEnableFrameLockI3D (void);
BOOL WINAPI wglDisableFrameLockI3D (void);
BOOL WINAPI wglIsEnabledFrameLockI3D (BOOL *pFlag);
BOOL WINAPI wglQueryFrameLockMasterI3D (BOOL *pFlag);
BOOL WINAPI wglGetFrameUsageI3D (float *pUsage);
BOOL WINAPI wglBeginFrameTrackingI3D (void);
BOOL WINAPI wglEndFrameTrackingI3D (void);
BOOL WINAPI wglQueryFrameTrackingI3D (DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage);
BOOL WINAPI wglDXSetResourceShareHandleNV (void *dxObject, HANDLE shareHandle);
HANDLE WINAPI wglDXOpenDeviceNV (void *dxDevice);
BOOL WINAPI wglDXCloseDeviceNV (HANDLE hDevice);
HANDLE WINAPI wglDXRegisterObjectNV (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
BOOL WINAPI wglDXUnregisterObjectNV (HANDLE hDevice, HANDLE hObject);
BOOL WINAPI wglDXObjectAccessNV (HANDLE hObject, GLenum access);
BOOL WINAPI wglDXLockObjectsNV (HANDLE hDevice, GLint count, HANDLE *hObjects);
BOOL WINAPI wglDXUnlockObjectsNV (HANDLE hDevice, GLint count, HANDLE *hObjects);
BOOL WINAPI wglCopyImageSubDataNV (HGLRC hSrcRC, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, HGLRC hDstRC, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
BOOL WINAPI wglDelayBeforeSwapNV (HDC hDC, GLfloat seconds);
BOOL WINAPI wglEnumGpusNV (UINT iGpuIndex, HGPUNV *phGpu);
BOOL WINAPI wglEnumGpuDevicesNV (HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE lpGpuDevice);
HDC WINAPI wglCreateAffinityDCNV (const HGPUNV *phGpuList);
BOOL WINAPI wglEnumGpusFromAffinityDCNV (HDC hAffinityDC, UINT iGpuIndex, HGPUNV *hGpu);
BOOL WINAPI wglDeleteDCNV (HDC hdc);
int WINAPI wglEnumerateVideoDevicesNV (HDC hDc, HVIDEOOUTPUTDEVICENV *phDeviceList);
BOOL WINAPI wglBindVideoDeviceNV (HDC hDc, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *piAttribList);
BOOL WINAPI wglQueryCurrentContextNV (int iAttribute, int *piValue);
BOOL WINAPI wglJoinSwapGroupNV (HDC hDC, GLuint group);
BOOL WINAPI wglBindSwapBarrierNV (GLuint group, GLuint barrier);
BOOL WINAPI wglQuerySwapGroupNV (HDC hDC, GLuint *group, GLuint *barrier);
BOOL WINAPI wglQueryMaxSwapGroupsNV (HDC hDC, GLuint *maxGroups, GLuint *maxBarriers);
BOOL WINAPI wglQueryFrameCountNV (HDC hDC, GLuint *count);
BOOL WINAPI wglResetFrameCountNV (HDC hDC);
void * WINAPI wglAllocateMemoryNV (GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);
void WINAPI wglFreeMemoryNV (void *pointer);
BOOL WINAPI wglBindVideoCaptureDeviceNV (UINT uVideoSlot, HVIDEOINPUTDEVICENV hDevice);
UINT WINAPI wglEnumerateVideoCaptureDevicesNV (HDC hDc, HVIDEOINPUTDEVICENV *phDeviceList);
BOOL WINAPI wglLockVideoCaptureDeviceNV (HDC hDc, HVIDEOINPUTDEVICENV hDevice);
BOOL WINAPI wglQueryVideoCaptureDeviceNV (HDC hDc, HVIDEOINPUTDEVICENV hDevice, int iAttribute, int *piValue);
BOOL WINAPI wglReleaseVideoCaptureDeviceNV (HDC hDc, HVIDEOINPUTDEVICENV hDevice);
BOOL WINAPI wglGetVideoDeviceNV (HDC hDC, int numDevices, HPVIDEODEV *hVideoDevice);
BOOL WINAPI wglReleaseVideoDeviceNV (HPVIDEODEV hVideoDevice);
BOOL WINAPI wglBindVideoImageNV (HPVIDEODEV hVideoDevice, HPBUFFERARB hPbuffer, int iVideoBuffer);
BOOL WINAPI wglReleaseVideoImageNV (HPBUFFERARB hPbuffer, int iVideoBuffer);
BOOL WINAPI wglSendPbufferToVideoNV (HPBUFFERARB hPbuffer, int iBufferType, unsigned long *pulCounterPbuffer, BOOL bBlock);
BOOL WINAPI wglGetVideoInfoNV (HPVIDEODEV hpVideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo);
BOOL WINAPI wglGetSyncValuesOML (HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc);
BOOL WINAPI wglGetMscRateOML (HDC hdc, INT32 *numerator, INT32 *denominator);
INT64 WINAPI wglSwapBuffersMscOML (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder);
INT64 WINAPI wglSwapLayerBuffersMscOML (HDC hdc, INT fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);
BOOL WINAPI wglWaitForMscOML (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc);
BOOL WINAPI wglWaitForSbcOML (HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc);

void load_WGL_WGLEXT();

#ifdef __cplusplus
}
#endif
#endif